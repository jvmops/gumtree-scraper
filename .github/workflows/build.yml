name: master

on:
  push:
    branches:
      - master
jobs:
  build-gradle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13
    - name: Build from sources
      run: ./gradlew build
    - name: Send coverage report
      run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}
    - name: Create artifact from *.jar
      uses: actions/upload-artifact@v1
      with:
        name: app
        path: build/libs/gumtree-scrapper.jar
  build-docker:
    runs-on: ubuntu-latest
    needs: build-gradle
    steps:
    - uses: actions/checkout@v1
    - name: Fetching the .jar in the artifact from build-gradle job
      uses: actions/download-artifact@v1
      with:
        name: app
    - run: ls -la ./
    - name: Setup git ssh access for tag management
      uses: webfactory/ssh-agent@v0.1.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Setup latest tag for docker hub image
      run: git switch -c ${GITHUB_REF##*/}
        && echo $(ls -la ./)
        && origin_url="git@github.com:jvmops/gumtree-scrapper.git"
        && git remote set-url origin "$origin_url"
        && echo "git-bot > origin_url set to $origin_url"
        && git tag -d latest || true
        && git push --delete origin latest || true
        && git tag latest
        && echo "git-bot > branch re-tagged"
        && git push origin latest
        && echo "git-bot > latest tag pushed to origin"
    - name: Publish docker image
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: jvmops/gumtree-scrapper
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tag_names: true
#  deploy-prod:
#    runs-on: ubuntu-latest
##    needs: build-docker
#    steps:
#      - name: Prepare environment for prod deployment
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.PROD_HOST }}
#          username: ${{ secrets.PROD_USERNAME }}
#          key: ${{ secrets.PROD_KEY }}
#          script: |
#            cd ~/projects/
#            rm gumtree-scrapper-compose -r
#            git clone git@github.com:jvmops/gumtree-scrapper-compose.git
#            cp env/gumtree-scrapper/.env gumtree-scrapper-compose/
#            docker pull jvmops/gumtree-scrapper
#      - name: Redeploying gumtree-web
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.PROD_HOST }}
#          username: ${{ secrets.PROD_USERNAME }}
#          key: ${{ secrets.PROD_KEY }}
#          script: |
#            cd ~/projects/gumtree-scrapper
#            docker_ps_output_before=$(docker ps --filter "name=gumtree-web")
#            images_output_before=$(docker images --filter=reference='jvmops/gumtree-scrapper')
#
#            docker-compose up -d --force-recreate gumtree-web
#
#            printf '\n%s\n' "##### Before"
#            printf '\n%s' "$docker_ps_output_before"
#            printf '\n%s' "$images_output_before"
#            printf '\n\n%s\n\n' "##### After"
#            docker ps --filter "name=gumtree-web"
#            docker images --filter=reference='jvmops/gumtree-scrapper'
#            printf '\n%s\n' "$(docker logs gumtree-mongo --tail 50)"
